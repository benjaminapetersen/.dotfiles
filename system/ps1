#!/bin/bash

# bash functions cant return.  derp.
#  https://www.linuxjournal.com/content/return-values-bash-functions
# prompt quick fix
# PS1='\w\$ '
PS1_PREV=${PS1} # store backup
# good enough for now.
# this needs to be improved, but is usable
# matthias has a nice prompt that looks like:
#  name at laptop in pwd on gitbranch 
#  orange at yellow in green on purple
# export PS1='${RED}$(whoami)@$(hostname):${GREEN}$(pwd) > ${RESTORE}'
# https://github.com/mathiasbynens/dotfiles.
function parse_git_dirty() {
  # NOTE: on `reload` this command seems to create a few errors on the cli:
  # -bash: :echo: command not found
  # a tad annoying, must revise
	[[ $(git status 2> /dev/null | tail -n1) != *"working directory clean"* ]] && echo "*"
}
function parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

function git_branch() {
  git branch 2>/dev/null | grep '^*' | colrm 1 2
}
function if_git_branch_on_branch() {
  if [ -d .git ]; then
    echo "${RESTORE} on${PURPLE} $(git_branch)$(parse_git_dirty)"
  fi
}

# todo: clean this up.
# from https://stackoverflow.com/questions/1616678/bash-pwd-shortening
# is a good quick fix, but I want to improve it.
function pwd_trunc () {
    # expects 2 args. woot for bash & clarity...
    local PRE= NAME="$1" LENGTH="$2";
    [[ "$NAME" != "${NAME#$HOME/}" || -z "${NAME#$HOME}" ]] &&
        PRE+='~' NAME="${NAME#$HOME}" LENGTH=$[LENGTH-1];
    ((${#NAME}>$LENGTH)) && NAME="/...${NAME:$[${#NAME}-LENGTH+4]}";
    echo "$PRE$NAME"
}
PROMPT_SYMBOL="${LYELLOW}:)${RESTORE}"

function prompt_symbol() {
  # echo "${PROMPT_SYMBOL}"
  printf "${FACE_GRIMMACE}"
}

function timestamp() {
  date '+%A %B %d %Y %r'
}

# btw, there are some really fun things out there :)
# https://github.com/twolfson/sexy-bash-prompt
# very sensible
# https://github.com/mathiasbynens/dotfiles/blob/master/.bash_prompt
export PS1='${DARKGRAY}$(timestamp)${RESTORE}\n${RED}$(whoami)@$(hostname) ${RESTORE}in${GREEN} $(pwd_trunc "$PWD" 40)$(if_git_branch_on_branch) ${RESTORE}\n$(prompt_symbol) '
export PS2="\[${yellow}\]â†’ \[${reset}\]";
# export PS3=""
# export PS4=""